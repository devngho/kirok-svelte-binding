// CODE WAS GENERATED BY KIROK-SVELTE-BINDING. DO NOT EDIT.

import { writable, type Writable, get } from 'svelte/store';
// %imports%
// import jspb from 'google-protobuf';
//
// function toHexString(bytes) {
//     // @ts-ignore
//     return Array.from(bytes, (byte) => {
//         return ('0' + (byte & 0xff).toString(16)).slice(-2);
//     }).join('');
// };
//
// function hexToBytes(hex) {
//     var bytes = [];
//
//     for (var c = 0; c < hex.length; c += 2) {
//         bytes.push(parseInt(hex.substring(c, c + 2), 16));
//     }
//
//     return bytes;
// };

let instance: WebAssembly.Exports | null = null;

try {
    instance = (await import('./index.mjs')).default;
} catch (e) {
    console.error(e);
}

function serialize(value: any): string {
    //@ts-ignore
    // const v: %modelname% = new %modelname%();
    // %protosetfields%
    // return toHexString(v.serializeBinary());
    return JSON.stringify(value);
}
function deserialize(value: string): any {
    // const v = hexToBytes(value);
    // const obj = %modelname%.deserializeBinary(v).toObject();
    // return %modelremap%;
    return JSON.parse(value);
}

export function isAvailable(): boolean {
    return instance != null;
}


export function use%modelname%(): %modeltype% | null {
    if (instance == null) return null

    const value = writable(deserialize(instance.init%modelname%()));

    return [
        value,
        {
            %modelintent%
        }
    ]
}